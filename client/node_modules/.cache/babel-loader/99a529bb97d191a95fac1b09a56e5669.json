{"ast":null,"code":"var _jsxFileName = \"/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: [],\n      destCity: this.props.match.params.destCity\n    };\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    console.log(this.state.destCity); // fetch(\"http://localhost:8081/genres\",\n    // {\n    //   method: 'GET' // The type of HTTP request.\n    // }).then(res => {\n    //   // Convert the response data to a JSON.\n    //   return res.json();\n    // }, err => {\n    //   // Print the error if there is one.\n    //   console.log(err);\n    // }).then(genreList => {\n    //   if (!genreList) return;\n    //   // Map each genreObj in genreList to an HTML element:\n    //   // A button which triggers the showMovies function for each genre.\n    //   let genreDivs = genreList.map((genreObj, i) =>\n    //   <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n    //   );\n    //   // Set the state of the genres list to the value returned by the HTTP response from the server.\n    //   this.setState({\n    //     genres: genreDivs\n    //   });\n    // }, err => {\n    //   // Print the error if there is one.\n    //   console.log(err);\n    // });\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let movieDivs = movieList.map((movie, i) => React.createElement(DashboardMovieRow, {\n        title: movie.title,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })); // Set the state of the movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Top 10 cheapest flights from you to \", this.state.destCity)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Rating\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Vote Count\"))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.movies)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","BrowserRouter","Router","Switch","Route","Link","useParams","CheapestFlightsTo","Component","constructor","props","state","genres","movies","destCity","match","params","showMovies","bind","componentDidMount","console","log","genre","fetch","method","then","res","json","err","movieList","movieDivs","map","movie","i","title","rating","vote_count","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: [],\n      destCity: this.props.match.params.destCity,\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    console.log(this.state.destCity);\n    // fetch(\"http://localhost:8081/genres\",\n    // {\n    //   method: 'GET' // The type of HTTP request.\n    // }).then(res => {\n    //   // Convert the response data to a JSON.\n    //   return res.json();\n    // }, err => {\n    //   // Print the error if there is one.\n    //   console.log(err);\n    // }).then(genreList => {\n    //   if (!genreList) return;\n    //   // Map each genreObj in genreList to an HTML element:\n    //   // A button which triggers the showMovies function for each genre.\n    //   let genreDivs = genreList.map((genreObj, i) =>\n    //   <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n    //   );\n\n    \n    //   // Set the state of the genres list to the value returned by the HTTP response from the server.\n    //   this.setState({\n    //     genres: genreDivs\n    //   });\n    // }, err => {\n    //   // Print the error if there is one.\n    //   console.log(err);\n    // });\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\"+genre,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      let movieDivs = movieList.map((movie, i) =>\n      <DashboardMovieRow title={movie.title} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top 10 cheapest flights from you to {this.state.destCity}</div>\n          </div>\n\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}