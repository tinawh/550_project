{"ast":null,"code":"var _jsxFileName = \"/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport AirbnbRow from './AirbnbRow';\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: [],\n      recMovies: [],\n      flights: [],\n      originCity: this.props.match.params.originCity,\n      destCity: this.props.match.params.destCity,\n      // TODO: remove prefilled values\n      checkin: '07-31-18',\n      checkout: '08-05-18',\n      airbnbs: []\n    };\n    this.handleCheckInChange = this.handleCheckInChange.bind(this);\n    this.handleCheckOutChange = this.handleCheckOutChange.bind(this);\n    this.submitDate = this.submitDate.bind(this);\n  }\n\n  handleCheckInChange(e) {\n    this.setState({\n      checkin: e.target.value\n    });\n  }\n\n  handleCheckOutChange(e) {\n    this.setState({\n      checkout: e.target.value\n    });\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/cheapestflightsto/\" + this.state.originCity + \"/\" + this.state.destCity, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err); // TODO: restore first part\n      // }).then(flightList => {\n      // if (!flightList) return;\n      // console.log(flightList);\n      // let flightDivs = flightList.map((flight, i) =>\n      // <CheapestFlightsRow fare={flight.fare} is_roundtrip={flight.is_roundtrip} outbound_carrier={flight.outbound_carrier} inbound_carrier={flight.inbound_carrier}/>\n      // );\n      // // Set the state of the movie list to the value returned by the HTTP response from the server.\n      // this.setState({\n      //   flights: flightDivs\n      // });\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let movieDivs = movieList.map((movie, i) => React.createElement(DashboardMovieRow, {\n        title: movie.title,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })); // Set the state of the movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  submitDate() {\n    // Send an HTTP request to the server.\n    // TODO: add CheapestDest to server\n    fetch(\"http://localhost:8081/cheapestairbnb/\" + this.state.destCity + \"/\" + this.state.checkin + \"/\" + this.state.checkout, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedMovieList => {\n      if (!recommendedMovieList) return;\n      console.log(recommendedMovieList); // TODO: change back to first 8 lines\n      // }).then(recommendedAirbnbList => {\n      //   if (!recommendedAirbnbList) return;\n      //   console.log(recommendedAirbnbList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      // let recommendedCityDivs = recommendedAirbnbList.map((airbnb, i) =>\n      //   //TODO: Change according to SQL schema\n      // <AirbnbRow name={airbnb.name} host_name={airbnb.host_name} photo_url={airbnb.photo_url} total_price={airbnb.total_price}/>\n\n      let recommendedMovieDivs = recommendedMovieList.map((movie, i) => React.createElement(AirbnbRow, {\n        title: movie.title,\n        id: movie.id,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })); // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        // TODO: Change back to first line\n        // airbnbs: recommendedAirbnbList\n        recMovies: recommendedMovieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cheapestdest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"destinations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Top 10 cheapest flights from \", this.state.originCity, \" to \", this.state.destCity), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Fare\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Roundtrip?\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Outbound Carrier\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Inbound Carrier\"))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.movies)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Looking for an Airbnb too?\"), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Check-in Date\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 07-31-18\",\n      value: this.state.checkin,\n      onChange: this.handleCheckInChange,\n      id: \"checkinDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Check-out Date\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 08-05-18\",\n      value: this.state.checkout,\n      onChange: this.handleCheckOutChange,\n      id: \"checkoutDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"submitDateBtn\",\n      className: \"submit-btn\",\n      onClick: this.submitDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Property Name\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Host Name\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Photo URL\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Total Price\")))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.recMovies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","AirbnbRow","CheapestFlightsTo","Component","constructor","props","state","genres","movies","recMovies","flights","originCity","match","params","destCity","checkin","checkout","airbnbs","handleCheckInChange","bind","handleCheckOutChange","submitDate","e","setState","target","value","componentDidMount","fetch","method","then","res","json","err","console","log","movieList","movieDivs","map","movie","i","title","rating","vote_count","recommendedMovieList","recommendedMovieDivs","id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport AirbnbRow from './AirbnbRow';\n\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: [],\n      recMovies: [],\n      flights: [],\n      originCity: this.props.match.params.originCity,\n      destCity: this.props.match.params.destCity,\n      // TODO: remove prefilled values\n      checkin: '07-31-18',\n      checkout: '08-05-18',\n      airbnbs: []\n    }\n    this.handleCheckInChange = this.handleCheckInChange.bind(this);\n    this.handleCheckOutChange = this.handleCheckOutChange.bind(this);\n    this.submitDate = this.submitDate.bind(this);\n  }\n\n  handleCheckInChange(e) {\n    this.setState({\n      checkin: e.target.value\n    });\n  }\n\n  handleCheckOutChange(e) {\n    this.setState({\n      checkout: e.target.value\n    });\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    fetch(\"http://localhost:8081/cheapestflightsto/\"+this.state.originCity+\"/\"+this.state.destCity,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    // TODO: restore first part\n      // }).then(flightList => {\n      // if (!flightList) return;\n      // console.log(flightList);\n      // let flightDivs = flightList.map((flight, i) =>\n      // <CheapestFlightsRow fare={flight.fare} is_roundtrip={flight.is_roundtrip} outbound_carrier={flight.outbound_carrier} inbound_carrier={flight.inbound_carrier}/>\n      // );\n\n      // // Set the state of the movie list to the value returned by the HTTP response from the server.\n      // this.setState({\n      //   flights: flightDivs\n      // });\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      let movieDivs = movieList.map((movie, i) =>\n      <DashboardMovieRow title={movie.title} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  submitDate() {\n    // Send an HTTP request to the server.\n    // TODO: add CheapestDest to server\n    fetch(\"http://localhost:8081/cheapestairbnb/\"+this.state.destCity+\"/\"+this.state.checkin+\"/\"+this.state.checkout,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedMovieList => {\n      if (!recommendedMovieList) return;\n      console.log(recommendedMovieList);\n      // TODO: change back to first 8 lines\n    // }).then(recommendedAirbnbList => {\n    //   if (!recommendedAirbnbList) return;\n    //   console.log(recommendedAirbnbList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      // let recommendedCityDivs = recommendedAirbnbList.map((airbnb, i) =>\n      //   //TODO: Change according to SQL schema\n      // <AirbnbRow name={airbnb.name} host_name={airbnb.host_name} photo_url={airbnb.photo_url} total_price={airbnb.total_price}/>\n\n      let recommendedMovieDivs = recommendedMovieList.map((movie, i) =>\n      <AirbnbRow title={movie.title} id={movie.id} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        // TODO: Change back to first line\n        // airbnbs: recommendedAirbnbList\n        recMovies: recommendedMovieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n\n  render() {    \n    return (\n      <div className=\"cheapestdest\">\n\n        <PageNavbar active=\"destinations\" />\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top 10 cheapest flights from {this.state.originCity} to {this.state.destCity}</div>\n\n            <div className=\"header-container\">\n              <div className=\"headers\">\n                <div className=\"header\"><strong>Fare</strong></div>\n                <div className=\"header\"><strong>Roundtrip?</strong></div>\n                <div className=\"header\"><strong>Outbound Carrier</strong></div>\n                <div className=\"header\"><strong>Inbound Carrier</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n        {/*TODO: Change back to first line\n                {this.state.flights}*/}\n                {this.state.movies}\n              </div>\n            </div>\n            <br></br>\n            <div className=\"h5\">Looking for an Airbnb too?</div>\n\n            <div className=\"header-container\">\n                <div className=\"input-container\">\n                <div className=\"h6\">Check-in Date</div>\n                <input type='text' placeholder=\"e.g. 07-31-18\" value={this.state.checkin} onChange={this.handleCheckInChange} id=\"checkinDate\"/>\n                <p/>\n                <div className=\"h6\">Check-out Date</div>\n                <input type='text' placeholder=\"e.g. 08-05-18\" value={this.state.checkout} onChange={this.handleCheckOutChange} id=\"checkoutDate\"/>\n                </div>\n            </div>\n            <p/>\n                <button id=\"submitDateBtn\" className=\"submit-btn\" onClick={this.submitDate}>Submit</button>\n\n                <div className=\"header-container\">\n                <div className=\"headers\">\n        {/*TODO: Change according to SQL schema*/} \n              <div className=\"headerCity\"><strong>Property Name</strong></div>\n                  <div className=\"headerCity\"><strong>Host Name</strong></div>\n                  <div className=\"headerCity\"><strong>Photo URL</strong></div>\n                  <div className=\"headerCity\"><strong>Total Price</strong></div>\n                  </div>\n                  </div>\n                  <div className=\"results-container\" id=\"results\">\n        {/*TODO: Change back to first row*/} \n          {/*{this.state.airbnbs}*/}\n                {this.state.recMovies}\n              </div>\n            </div>\n            </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}