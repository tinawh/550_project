{"ast":null,"code":"var _jsxFileName = \"/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestDest.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport DestRecommendationsRow from './DestRecommendationsRow';\nexport default class CheapestDest extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      recMovies: [],\n      originCity: \"\",\n      //TODO: replace with warning if city doesn't exist\n      year: undefined,\n      quarter: undefined,\n      destCities: []\n    };\n    this.handleOriginCityNameChange = this.handleOriginCityNameChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleQuarterChange = this.handleQuarterChange.bind(this);\n    this.submitCityYearQuarter = this.submitCityYearQuarter.bind(this);\n  }\n\n  handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  handleQuarterChange(e) {\n    this.setState({\n      quarter: e.target.value\n    });\n  }\n\n  handleOriginCityNameChange(e) {\n    this.setState({\n      originCity: e.target.value\n    });\n  }\n\n  submitCityYearQuarter() {\n    // Send an HTTP request to the server.\n    // TODO: add CheapestDest to server\n    if (this.state.originCity == \"\") {}\n\n    fetch(\"http://localhost:8081/destinations/\" + this.state.originCity, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedMovieList => {\n      if (!recommendedMovieList) return;\n      console.log(recommendedMovieList); // TODO: change back to first 8 lines\n      // }).then(recommendedCityList => {\n      //   if (!recommendedCityList) return;\n      //   console.log(recommendedCityList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      // let recommendedCityDivs = recommendedCityList.map((city, i) =>\n      //   //TODO: Change according to SQL schema\n      // <DestRecommendationsRow name={city.name} avg_fare={city.avg_fare}/>\n\n      let recommendedMovieDivs = recommendedMovieList.map((movie, i) => React.createElement(DestRecommendationsRow, {\n        title: movie.title,\n        id: movie.id,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })); // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        // TODO: Change back to first line\n        // destCities: recommendedCityDivs\n        recMovies: recommendedMovieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CheapestDest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"Cheapest Destination From You\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container recommendations-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Let's find the cheeeeaaapst vacation you could've been on!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Enter city name\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. New York City\",\n      value: this.state.originCity,\n      onChange: this.handleOriginCityNameChange,\n      id: \"cityName\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Enter year\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 2017\",\n      value: this.state.year,\n      onChange: this.handleYearChange,\n      id: \"year\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Enter quarter\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 2\",\n      value: this.state.quarter,\n      onChange: this.handleQuarterChange,\n      id: \"quarter\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"submitCityBtn\",\n      className: \"submit-btn\",\n      onClick: this.submitCityYearQuarter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Destination\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Average Fare\")))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.recMovies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestDest.js"],"names":["React","PageNavbar","DestRecommendationsRow","CheapestDest","Component","constructor","props","state","recMovies","originCity","year","undefined","quarter","destCities","handleOriginCityNameChange","bind","handleYearChange","handleQuarterChange","submitCityYearQuarter","e","setState","target","value","fetch","method","then","res","json","err","console","log","recommendedMovieList","recommendedMovieDivs","map","movie","i","title","id","rating","vote_count","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport DestRecommendationsRow from './DestRecommendationsRow';\n\nexport default class CheapestDest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      recMovies: [],\n      originCity: \"\", //TODO: replace with warning if city doesn't exist\n      year: undefined,\n      quarter: undefined,\n      destCities: []\n    }\n\n    this.handleOriginCityNameChange = this.handleOriginCityNameChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleQuarterChange = this.handleQuarterChange.bind(this);\n    this.submitCityYearQuarter = this.submitCityYearQuarter.bind(this);\n\n  }\n\n  handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  handleQuarterChange(e) {\n    this.setState({\n      quarter: e.target.value\n    });\n  }\n\n  handleOriginCityNameChange(e) {\n    this.setState({\n      originCity: e.target.value\n    });\n  }\n\n  submitCityYearQuarter() {\n    // Send an HTTP request to the server.\n    // TODO: add CheapestDest to server\n    if (this.state.originCity == \"\"){\n        \n    }\n    fetch(\"http://localhost:8081/destinations/\"+this.state.originCity,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedMovieList => {\n      if (!recommendedMovieList) return;\n      console.log(recommendedMovieList);\n      // TODO: change back to first 8 lines\n    // }).then(recommendedCityList => {\n    //   if (!recommendedCityList) return;\n    //   console.log(recommendedCityList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      // let recommendedCityDivs = recommendedCityList.map((city, i) =>\n      //   //TODO: Change according to SQL schema\n      // <DestRecommendationsRow name={city.name} avg_fare={city.avg_fare}/>\n\n      let recommendedMovieDivs = recommendedMovieList.map((movie, i) =>\n      <DestRecommendationsRow title={movie.title} id={movie.id} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        // TODO: Change back to first line\n        // destCities: recommendedCityDivs\n        recMovies: recommendedMovieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  \n\n  \n  render() {    \n    return (\n      <div className=\"CheapestDest\">\n\n        <PageNavbar active=\"Cheapest Destination From You\" />\n        <br></br>\n        <div className=\"container recommendations-container\">\n            <div className=\"jumbotron\">\n              <div className=\"h5\">Let's find the cheeeeaaapst vacation you could've been on!</div>\n              <br></br>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter city name</div>\n                </div>\n              <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. New York City\" value={this.state.originCity} onChange={this.handleOriginCityNameChange} id=\"cityName\" className=\"movie-input\"/>\n                </div>\n                <p/>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter year</div>\n                </div>\n                <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. 2017\" value={this.state.year} onChange={this.handleYearChange} id=\"year\" className=\"movie-input\"/>\n                </div>\n                <p/>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter quarter</div>\n                </div>\n                <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. 2\" value={this.state.quarter} onChange={this.handleQuarterChange} id=\"quarter\" className=\"movie-input\"/>\n                </div>\n                <p/>\n                <button id=\"submitCityBtn\" className=\"submit-btn\" onClick={this.submitCityYearQuarter}>Submit</button>\n              \n              <div className=\"header-container\">\n                <div className=\"headers\">\n            <br></br>\n        {/*TODO: Change according to SQL schema*/} \n                  <div className=\"headerCity\"><strong>Destination</strong></div>\n                  <div className=\"headerCity\"><strong>Average Fare</strong></div>\n                </div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n        {/*TODO: Change back to destCities*/} \n          {/*{this.state.destCities}*/}\n                {this.state.recMovies}\n              </div>\n            </div>\n          </div>\n\n\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}