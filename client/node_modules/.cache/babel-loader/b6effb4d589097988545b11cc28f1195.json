{"ast":null,"code":"var _jsxFileName = \"/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: [],\n      flights: [],\n      originCity: this.props.match.params.originCity,\n      destCity: this.props.match.params.destCity,\n      checkin: undefined,\n      checkout: undefined\n    };\n    this.handleYearChange = this.handleYearChange.bind(this);\n  }\n\n  handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/cheapestflightsto/\" + this.state.originCity + \"/\" + this.state.destCity, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err); // TODO: restore first part\n      // }).then(flightList => {\n      // if (!flightList) return;\n      // console.log(flightList);\n      // let flightDivs = flightList.map((flight, i) =>\n      // <CheapestFlightsRow fare={flight.fare} is_roundtrip={flight.is_roundtrip} outbound_carrier={flight.outbound_carrier} inbound_carrier={flight.inbound_carrier}/>\n      // );\n      // // Set the state of the movie list to the value returned by the HTTP response from the server.\n      // this.setState({\n      //   flights: flightDivs\n      // });\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let movieDivs = movieList.map((movie, i) => React.createElement(DashboardMovieRow, {\n        title: movie.title,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })); // Set the state of the movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Top 10 cheapest flights from \", this.state.originCity, \" to \", this.state.destCity), React.createElement(\"div\", {\n      className: \"movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Rating\")), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Vote Count\"))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.movies)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Looking for an Airbnb too?\"), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 07/31/18\",\n      value: this.state.checkin,\n      onChange: this.handleCheckInChange,\n      id: \"checkinDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestFlightsTo.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","BrowserRouter","Router","Switch","Route","Link","useParams","CheapestFlightsTo","Component","constructor","props","state","genres","movies","flights","originCity","match","params","destCity","checkin","undefined","checkout","handleYearChange","bind","e","setState","year","target","value","componentDidMount","fetch","method","then","res","json","err","console","log","movieList","movieDivs","map","movie","i","title","rating","vote_count","render","handleCheckInChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nexport default class CheapestFlightsTo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: [],\n      flights: [],\n      originCity: this.props.match.params.originCity,\n      destCity: this.props.match.params.destCity,\n      checkin: undefined,\n      checkout: undefined\n    }\n    this.handleYearChange = this.handleYearChange.bind(this);\n  }\n\n    handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    fetch(\"http://localhost:8081/cheapestflightsto/\"+this.state.originCity+\"/\"+this.state.destCity,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    // TODO: restore first part\n      // }).then(flightList => {\n      // if (!flightList) return;\n      // console.log(flightList);\n      // let flightDivs = flightList.map((flight, i) =>\n      // <CheapestFlightsRow fare={flight.fare} is_roundtrip={flight.is_roundtrip} outbound_carrier={flight.outbound_carrier} inbound_carrier={flight.inbound_carrier}/>\n      // );\n\n      // // Set the state of the movie list to the value returned by the HTTP response from the server.\n      // this.setState({\n      //   flights: flightDivs\n      // });\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      let movieDivs = movieList.map((movie, i) =>\n      <DashboardMovieRow title={movie.title} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top 10 cheapest flights from {this.state.originCity} to {this.state.destCity}</div>\n\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n            <br></br>\n            <div className=\"h5\">Looking for an Airbnb too?</div>\n                <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. 07/31/18\" value={this.state.checkin} onChange={this.handleCheckInChange} id=\"checkinDate\"/>\n                </div>\n            </div>\n            </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}