{"ast":null,"code":"var _jsxFileName = \"/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestDest.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport RecommendationsRow from './RecommendationsRow';\nimport { Redirect } from 'react-router-dom';\nimport DestRecommendationsRow from './DestRecommendationsRow';\nexport default class CheapestDest extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.onSubmit = () => {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      genres: [],\n      movies: [],\n      originCity: \"\",\n      year: null,\n      quarter: null,\n      destCities: []\n    };\n    this.handleOriginCityNameChange = this.handleOriginCityNameChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleQuarterChange = this.handleQuarterChange.bind(this);\n    this.submitCityYearQuarter = this.submitCityYearQuarter.bind(this);\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  handleQuarterChange(e) {\n    this.setState({\n      quarter: e.target.value\n    });\n  }\n\n  handleOriginCityNameChange(e) {\n    this.setState({\n      originCity: e.target.value\n    });\n  }\n\n  submitCityYearQuarter() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/CheapestDest/\" + this.state.originCity, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedCityList => {\n      if (!recommendedCityList) return;\n      console.log(recommendedCityList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let recommendedCityDivs = recommendedCityList.map((city, i) => //TODO: Change according to SQL schema\n      React.createElement(DestRecommendationsRow, {\n        name: city.name,\n        fare: city.fare,\n        is_rt: city.is_rt,\n        carrier: city.carrier,\n        rt_carrier: city.rt_carrier,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })); // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        destCities: recommendedCityDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let genreDivs = genreList.map((genreObj, i) => React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.genre,\n        onClick: () => this.showMovies(genreObj.genre),\n        genre: genreObj.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let movieDivs = movieList.map((movie, i) => React.createElement(DashboardMovieRow, {\n        title: movie.title,\n        rating: movie.rating,\n        vote_count: movie.vote_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })); // Set the state of the movie list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CheapestDest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"cheapestdest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container recommendations-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Let's find the cheeeeaaapst vacation you could've been on!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Enter city name\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. New York City\",\n      value: this.state.originCity,\n      onChange: this.handleOriginCityNameChange,\n      id: \"cityName\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Enter year\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 2017\",\n      value: this.state.year,\n      onChange: this.handleYearChange,\n      id: \"year\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Enter quarter\")), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"e.g. 2\",\n      value: this.state.quarter,\n      onChange: this.handleQuarterChange,\n      id: \"quarter\",\n      className: \"movie-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"submitCityBtn\",\n      className: \"submit-btn\",\n      onClick: this.submitCityYearQuarter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Click Here!!!\"), React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Destination\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Fare\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Is Rountrip?\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Carrier\")), React.createElement(\"div\", {\n      className: \"headerCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Return Carrier (if any)\")))), React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.recMovies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/TheSuperbGarfield/CIS550_Project/client/src/components/CheapestDest.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","RecommendationsRow","Redirect","DestRecommendationsRow","CheapestDest","Component","constructor","props","onSubmit","state","genres","movies","originCity","year","quarter","destCities","handleOriginCityNameChange","bind","handleYearChange","handleQuarterChange","submitCityYearQuarter","showMovies","e","setState","target","value","fetch","method","then","res","json","err","console","log","recommendedCityList","recommendedCityDivs","map","city","i","name","fare","is_rt","carrier","rt_carrier","componentDidMount","genreList","genreDivs","genreObj","genre","movieList","movieDivs","movie","title","rating","vote_count","render","recMovies"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nimport RecommendationsRow from './RecommendationsRow';\nimport {Redirect} from 'react-router-dom';\nimport DestRecommendationsRow from './DestRecommendationsRow';\n\nexport default class CheapestDest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: [],\n      originCity: \"\",\n      year: null,\n      quarter: null,\n      destCities: []\n    }\n\n    this.handleOriginCityNameChange = this.handleOriginCityNameChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleQuarterChange = this.handleQuarterChange.bind(this);\n    this.submitCityYearQuarter = this.submitCityYearQuarter.bind(this);\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  handleYearChange(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  handleQuarterChange(e) {\n    this.setState({\n      quarter: e.target.value\n    });\n  }\n\n  handleOriginCityNameChange(e) {\n    this.setState({\n      originCity: e.target.value\n    });\n  }\n\n  submitCityYearQuarter() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/CheapestDest/\"+this.state.originCity,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(recommendedCityList => {\n      if (!recommendedCityList) return;\n      console.log(recommendedCityList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      let recommendedCityDivs = recommendedCityList.map((city, i) =>\n        //TODO: Change according to SQL schema\n      <DestRecommendationsRow name={city.name} fare={city.fare} is_rt={city.is_rt} carrier={city.carrier} rt_carrier={city.rt_carrier}/>\n      );\n\n      // Set the state of the recommended movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        destCities: recommendedCityDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let genreDivs = genreList.map((genreObj, i) =>\n      <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n      );\n\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        genres: genreDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\nonSubmit = () => {\n     return <Redirect to=\"/dashboard\" />\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\"+genre,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      console.log(movieList);\n      // Map each attribute of a person in this.state.people to an HTML element\n      let movieDivs = movieList.map((movie, i) =>\n      <DashboardMovieRow title={movie.title} rating={movie.rating} vote_count={movie.vote_count}/>\n      );\n\n      // Set the state of the movie list to the value returned by the HTTP response from the server.\n      this.setState({\n        movies: movieDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {    \n    return (\n      <div className=\"CheapestDest\">\n\n        <PageNavbar active=\"cheapestdest\" />\n        <br></br>\n        <div className=\"container recommendations-container\">\n            <div className=\"jumbotron\">\n              <div className=\"h5\">Let's find the cheeeeaaapst vacation you could've been on!</div>\n              <br></br>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter city name</div>\n                </div>\n              <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. New York City\" value={this.state.originCity} onChange={this.handleOriginCityNameChange} id=\"cityName\" className=\"movie-input\"/>\n                </div>\n                <p/>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter year</div>\n                </div>\n                <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. 2017\" value={this.state.year} onChange={this.handleYearChange} id=\"year\" className=\"movie-input\"/>\n                </div>\n                <p/>\n              <div className=\"header-container\">\n                <div className=\"h6\">Enter quarter</div>\n                </div>\n                <div className=\"input-container\">\n                <input type='text' placeholder=\"e.g. 2\" value={this.state.quarter} onChange={this.handleQuarterChange} id=\"quarter\" className=\"movie-input\"/>\n                </div>\n                <p/>\n                <button id=\"submitCityBtn\" className=\"submit-btn\" onClick={this.submitCityYearQuarter}>Submit</button>\n              <button onClick={this.onSubmit}>Click Here!!!</button>\n              <div className=\"header-container\">\n                <div className=\"headers\">\n        {/*TODO: Change according to SQL schema*/} \n                  <div className=\"headerCity\"><strong>Destination</strong></div>\n                  <div className=\"headerCity\"><strong>Fare</strong></div>\n                      <div className=\"headerCity\"><strong>Is Rountrip?</strong></div>\n                      <div className=\"headerCity\"><strong>Carrier</strong></div>\n                      <div className=\"headerCity\"><strong>Return Carrier (if any)</strong></div>\n                </div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.recMovies}\n              </div>\n            </div>\n          </div>\n\n\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}