Query 1.
Description: What are the top 10 cheapest, nonbulk return flights between a pair of cities in a given year/quarter?
Contribution: Tianze Chris Yi
-- fixed 
WITH temp AS (SELECT itinerary_id, rpcarrier, c_orig.city AS origin_city, c_dest.city AS dest_city, AVG(f.itin_fare) AS fare
FROM flight_itinerary f 
JOIN airport a_orig 
	ON f.origin_airport_id = a_orig.id 
JOIN airport a_dest 
	ON f.dest_airport_id = a_dest.id 
JOIN citycode c_orig 
	ON a_orig.city = c_orig.code 
JOIN citycode c_dest 
	ON a_dest.city = c_dest.code
GROUP BY c_orig.city, f.year, f.quarter, c_dest.city, is_bulkfare, rpcarrier, itinerary_id
HAVING ((c_orig.city = 'San Francisco, CA (Metropolitan Area)' AND c_dest.city = 'New York City, NY (Metropolitan Area)') OR 
		(c_dest.city =  'San Francisco, CA (Metropolitan Area)' AND c_orig.city = 'New York City, NY (Metropolitan Area)')) AND 
		year = 2019 AND quarter = 1 AND is_bulkfare = 0
),
outward AS (SELECT *
FROM (SELECT origin_city AS out_origin_city, dest_city AS out_dest_city, itinerary_id, rpcarrier, fare AS out_avg_fare
FROM temp 
WHERE origin_city = 'San Francisco, CA (Metropolitan Area)' AND dest_city = 'New York City, NY (Metropolitan Area)'
ORDER BY fare)
WHERE ROWNUM <= 10),
return AS (SELECT *
FROM (SELECT origin_city AS ret_origin_city, dest_city AS ret_dest_city, itinerary_id, rpcarrier, fare AS ret_avg_fare
FROM temp 
WHERE origin_city = 'New York City, NY (Metropolitan Area)' AND dest_city = 'San Francisco, CA (Metropolitan Area)'
ORDER BY fare)
WHERE ROWNUM <= 10)
SELECT *
FROM (SELECT o.out_origin_city, o.out_dest_city, o.itinerary_id AS out_itinerary_id, o.rpcarrier AS out_rpcarrier, 
	   r.ret_origin_city, r.ret_dest_city, r.itinerary_id AS ret_itinerary_id, r.rpcarrier AS ret_rpcarrier, out_avg_fare + ret_avg_fare AS total_fare  
FROM outward o 
FULL OUTER JOIN return r
	ON o.out_origin_city = r.ret_dest_city
ORDER BY (out_avg_fare + ret_avg_fare))
WHERE ROWNUM <= 10;

------------------------------------------------------

Query 2.
Description: What are the top 10 cheapest destinations (cities) via flights from a given city in a given year/quarter?
Contribution: Tianze Chris Yi
-- fixed 
SELECT * 
FROM (SELECT c_orig.city, f.year, f.quarter, c_dest.city AS destination_city, AVG(f.itin_fare) AS avg_fare_price
FROM flight_itinerary f 
JOIN airport a_orig 
	ON f.origin_airport_id = a_orig.id 
JOIN airport a_dest 
	ON f.dest_airport_id = a_dest.id 
JOIN citycode c_orig 
	ON a_orig.city = c_orig.code 
JOIN citycode c_dest 
	ON a_dest.city = c_dest.code
GROUP BY c_orig.city, f.year, f.quarter, c_dest.city
HAVING c_orig.city = ${req.param.origin_city} AND year = ${req.param.year} AND quarter = ${req.param.quarter}
ORDER BY AVG(f.itin_fare))
WHERE ROWNUM <= 10;
------------------------------------------------------

Query 3.
Description: Top 10 cheapest listings in a city given checkin/out dates and accomodation type
Contribution: Tianze Chris Yi
-- fixed
SELECT * 
FROM (SELECT l.id, l.name, l.host_name, l.photo_url, a.price
FROM listing l 
JOIN availability a  
	ON l.id = a.listing_id
WHERE is_available = 't' AND city = ${req.param.dest_city} AND accom_type = ${req.param.accom_type} AND 
	   TO_DATE(${req.param.checkin_date}, 'YYYY-MM-DD') = TO_DATE(availability_date, 'YYYY-MM-DD') AND 
	   (TO_DATE(${req.param.checkout_date}, 'YYYY-MM-DD') - TO_DATE(${req.param.checkin_date}, 'YYYY-MM-DD')) BETWEEN min_num_nights AND max_num_nights
ORDER BY price)
WHERE ROWNUM <= 10;
------------------------------------------------------

Query 4.
Based on origin, destination, quarter, year, airplane budget and hotel budget range what are the cheapest recommendations?
Contribution: Wan Ting Huang
-- fixed 
--params 
WITH a AS (SELECT is_available, listing_id, max_num_nights, min_num_nights, price, TO_DATE(availability_date,'YYYY-MM-DD') AS availability_date
FROM availability
),
filtered_listings AS (SELECT listing_id, name, availability_date, city AS destination_city, 
accom_type, photo_url, price, max_num_nights, min_num_nights 
FROM a
JOIN listing l 
    ON a.listing_id  = l.id
WHERE TO_CHAR(availability_date, 'Q') = 1 AND 
EXTRACT(YEAR FROM availability_date) = 2020 AND
city = 'San Francisco, CA (Metropolitan Area)' AND 
price BETWEEN 0 AND 300
),
filtered_flights AS (
SELECT itinerary_id, itin_fare, RPCarrier, quarter, c_orig.city AS origin_city, 
    c_dest.city AS destination_city, origin_airport_id, dest_airport_id
FROM flight_itinerary f
JOIN airport ai_orig  
	ON ai_orig.id = f.origin_airport_id 
JOIN airport ai_dest
    ON ai_dest.id = f.dest_airport_id
JOIN citycode c_orig
    ON ai_orig.city = c_orig.code
JOIN citycode c_dest
    ON ai_dest.	city = c_dest.code
WHERE c_orig.city = 'Allentown/Bethlehem/Easton, PA' AND 
      c_dest.city = 'San Francisco, CA (Metropolitan Area)' AND
	  f.quarter = 1 AND 
	  f.is_bulkfare = 0 AND
	  f.year = 2019 AND
	  f.itin_fare BETWEEN 100 AND 1000
)
SELECT ff.origin_city, ff.origin_airport_id, ff.dest_airport_id, ff.RPCarrier, ff.itin_fare AS flight_fare,
fl.destination_city, fl.accom_type, fl.photo_url, fl.price AS listing_price, fl.max_num_nights, fl.min_num_nights, ff.itin_fare + fl.price AS total_fare 
FROM filtered_listings fl
JOIN filtered_flights ff
    ON ff.destination_city = fl.destination_city
ORDER BY ff.itin_fare + fl.price;

--no params 
WITH a AS (SELECT is_available, listing_id, max_num_nights, min_num_nights, price, TO_DATE(availability_date,'YYYY-MM-DD') AS availability_date
FROM availability
),
filtered_listings AS (SELECT listing_id, name, availability_date, city AS destination_city, 
accom_type, photo_url, price, max_num_nights, min_num_nights 
FROM a
JOIN listing l 
    ON a.listing_id  = l.id
WHERE TO_CHAR(availability_date, 'Q') = ${req.param.quarter} AND 
EXTRACT(YEAR FROM availability_date) = ${req.param.year} AND
city = ${req.param.dest_city} AND 
price BETWEEN ${req.param.min_hotel_budget} AND ${req.param.max_hotel_budget}
),
filtered_flights AS (
SELECT itinerary_id, itin_fare, RPCarrier, quarter, c_orig.city AS origin_city, 
    c_dest.city AS destination_city, origin_airport_id, dest_airport_id
FROM flight_itinerary f
JOIN airport ai_orig  
	ON ai_orig.id = f.origin_airport_id 
JOIN airport ai_dest
    ON ai_dest.id = f.dest_airport_id
JOIN citycode c_orig
    ON ai_orig.city = c_orig.code
JOIN citycode c_dest
    ON ai_dest.	city = c_dest.code
WHERE c_orig.city = ${req.param.origin_city} AND 
      c_dest.city = ${req.param.dest_city} AND
	  f.quarter = ${req.param.quarter} AND 
	  f.is_bulkfare = 0 AND
	  f.year = 2019 AND
	  f.itin_fare BETWEEN ${req.param.min_flight_budget} AND ${req.param.max_flight_budget}
)
SELECT ff.origin_city, ff.origin_airport_id, ff.dest_airport_id, ff.RPCarrier, ff.itin_fare AS flight_fare,
fl.destination_city, fl.accom_type, fl.photo_url, fl.price AS listing_price, fl.max_num_nights, fl.min_num_nights, ff.itin_fare + fl.price AS total_fare 
FROM filtered_listings fl
JOIN filtered_flights ff
    ON ff.destination_city = fl.destination_city
ORDER BY ff.itin_fare + fl.price;

------------------------------------------------------
Query 5.

Show average cheapest city to get an accom_type for a specific range of start dates and number of nights 
Contribution: Wan Ting Huang
-- fixed 
WITH a AS (SELECT is_available, listing_id, max_num_nights, min_num_nights, price, TO_DATE(availability_date,'YYYY-MM-DD') AS availability_date
FROM availability
),
t AS (SELECT * 
FROM listing l 
JOIN a 
    ON l.id = a.listing_id 
WHERE a.availability_date BETWEEN TO_DATE(${req.param.earliest_date}, 'YYYY-MM-DD') AND TO_DATE(${req.param.latest_date}, 'YYYY-MM-DD') AND 
      ${req.param.num_nights} BETWEEN min_num_nights AND max_num_nights AND 
      a.is_available ='t'
),
h AS (SELECT city, accom_type, AVG(price) AS average_price_per_day 
FROM t
GROUP BY city, accom_type
)
SELECT city, average_price_per_day
FROM h
WHERE accom_type = ${req.param.accomodation_type}
ORDER BY average_price_per_day;


------------------------------------------------------
Query 6.
-- fixed 
Best hotels in a city for price for short, medium, and long term stay
Contribution: Wan Ting Huang

WITH length_labeled AS (SELECT l.id, l.name, l.photo_url, l.host_name, l.neighborhood, l.accom_type, l.city, 
       a.availability_date, a.price, a.max_num_nights, a.min_num_nights,
       CASE WHEN a.min_num_nights <= 2 THEN 'short'
	        WHEN a.max_num_nights >= 30 THEN  'long'
	        ELSE 'medium' END AS stay_length
FROM listing l 
JOIN availability a  
	ON l.id = a.listing_id
WHERE is_available = 't')
SELECT *
FROM length_labeled 
WHERE stay_length = 'long' AND
	  city = 'San Francisco, CA (Metropolitan Area)'
ORDER BY price;
------------------------------------------------------

Other query suggestions:
Flexible date search for flight and airbnb (+/- 3 days)
Joining flight and airbnb by year/quarter and city: query 4


------------------------------------------------------

AWS RDS Credentials: (Worthan)
